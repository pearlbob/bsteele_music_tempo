#!/bin/tcsh
#set echo; set verbose

echo $0\:

set machine=pi@bobspi8

##	prep for the build
#	cd ~/github/bsteele_music_flutter/
#	rm -rf linux
#	flutter clean
#	flutter config --enable-linux-desktop
#	flutter pub get
#	flutter -d linux create . --org com.bsteele
#	sed -ie 's/gtk_window_set_default_size(window, 1280, 720);/gtk_window_set_default_size(window, 1920, 1080);/' \
#	  linux/my_application.cc
#	flutter pub get
#
#	cd ~/github/bsteeleMusicLib/
#	cd bsteele_music_lib/
#	flutter clean

set app=bsteele_music_tempo
set bsDir=${app}
set remoteDir=remotePi
set src=${app}

set hostname=`hostname`;
if ( $hostname == 'bob' || $hostname == 'bobsm4.localdomain' ) then
  #  update the date file
  cd ~/github/${app}
  echo "String releaseUtcDate() => '`date --utc +%Y%m%d_%H%M%S`';"  > lib/utcDate.dart

  # copy source to pi
	ssh ${machine} mkdir -p '~pi/junk'
  foreach project ( $bsDir bsteele_bass_common bsteeleMusicLib )
    ssh ${machine} rm -rf '~pi/junk/'$project   # start with a clean copy
    ssh ${machine} 'mkdir -p  ~pi/junk/'$project
    cd ~/github
    scp -p -q -r $project  ${machine}:junk/
	end

	#	execute this script on the remote machine
	cd ~/github/${app}
	ssh ${machine} "cd ~pi/junk/$bsDir; ./bin/$0:t"
	set stat=$status
	echo machine status $stat
	exit $status
else
  # on the pi

	echo on machine `hostname`

	cd ~/junk/$bsDir
	pkill -f bsteele_music_tempo.exe
	pkill -f bob_tempo_

	rm -rf .gradle
	rm -rf linux
	dart pub get
  dart compile exe --target-os linux lib/bsteele_music_tempo.dart
	set stat=$status
	if ( $stat != 0 ) exit $stat

	exit $status
endif



